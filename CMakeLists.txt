# Build
cmake_minimum_required(VERSION 3.12)

project(hello VERSION 1.0.0 LANGUAGES CXX)

include(GNUInstallDirs)

add_library(${PROJECT_NAME} INTERFACE)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

target_compile_features(${PROJECT_NAME} INTERFACE cxx_std_20)

message(PROJECT_NAME="${PROJECT_NAME}")

if(NOT CMAKE_BUILD_TYPE)
  set(CMAKE_BUILD_TYPE Release)
endif()

# Test
set(GTest_ROOT /u/dssc/mceloria/googletest)
add_subdirectory(${GTest_ROOT} "${CMAKE_CURRENT_BINARY_DIR}/googletest" EXCLUDE_FROM_ALL)
message(CMAKE_CURRENT_BINARY_DIR="${CMAKE_CURRENT_BINARY_DIR}")

find_package(GTest REQUIRED)
add_executable(hello_test test/test.cpp)
target_link_libraries(hello_test PRIVATE GTest::gtest GTest::gtest_main)
target_include_directories(hello_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
add_test(AllAddTests hello_test)


# Import the module
include (CheckLanguage)

# Check whether CUDA is supported
# export PATH=/opt/nvidia/hpc_sdk/Linux_x86_64/25.1/cuda/12.6/bin:$PATH
#set(CUDAToolkit_ROOT=/opt/nvidia/hpc_sdk/Linux_x86_64/25.1/cuda/12.6/)
#export PATH=/u/dssc/mceloria/intel/oneapi/mkl/2025.1/
#export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/u/dssc/mceloria/intel/oneapi/mkl/2025.1/lib
#export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/u/dssc/mceloria/intel/oneapi/tbb/2022.1/lib

check_language(CUDA)

if(CMAKE_CUDA_COMPILER)
  # CUDA language is supported. It is safe to enable it.
  set(CMAKE_CXX_FLAGS_RELEASE "-O3" )
  enable_language(CUDA)
  add_executable(main main.cu)
  add_executable(dev_copyctor_sp_test test/dev_copy_ctor_sp.cu)
  add_executable(dev_copyctor_dp_test test/dev_copy_ctor_dp.cu)
  add_executable(dev_movector_sp_test test/dev_move_ctor_sp.cu)
  add_executable(dev_movector_dp_test test/dev_move_ctor_dp.cu)
  add_executable(dev_matmul_sp_test test/dev_matmul_sp.cu) 
  add_executable(dev_matmul_dp_test test/dev_matmul_dp.cu) 
  add_executable(dev_trans_sp_test test/dev_trans_sp.cu) 
  add_executable(dev_trans_dp_test test/dev_trans_dp.cu) 
  add_executable(dev_matarith_sp_test test/dev_matarith_sp.cu) 
  add_executable(dev_matarith_dp_test test/dev_matarith_dp.cu) 
  add_executable(dev_norm_sp_test test/dev_norm_sp.cu) 
  add_executable(dev_norm_dp_test test/dev_norm_dp.cu) 
  add_executable(dev_copy_sp_test test/dev_copy_sp.cu) 
  add_executable(dev_copy_dp_test test/dev_copy_dp.cu) 
  add_executable(dev_fill_sp_test test/dev_fill_sp.cu) 
  add_executable(dev_fill_dp_test test/dev_fill_dp.cu) 
  add_executable(dev_reduce_sp_test test/dev_reduce_sp.cu) 
  add_executable(dev_reduce_dp_test test/dev_reduce_dp.cu) 
  add_executable(dev_trans_reduce_sp_test test/dev_trans_reduce_sp.cu) 
  add_executable(dev_trans_reduce_dp_test test/dev_trans_reduce_dp.cu) 
  target_include_directories(main PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_copyctor_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_copyctor_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_movector_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_movector_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_matmul_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_matmul_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_trans_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_trans_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_matarith_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_matarith_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_norm_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_norm_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_copy_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_copy_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_fill_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_fill_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_reduce_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_reduce_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_trans_reduce_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(dev_trans_reduce_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  find_package(CUDAToolkit)
  if( CUDAToolkit_FOUND )
    message("CUDAToolkit_FOUND - ${CUDAToolkit_INCLUDE_DIRS}")
    target_link_libraries(main PRIVATE CUDA::curand)
    target_link_libraries(dev_copyctor_sp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_copyctor_dp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_movector_sp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_movector_dp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_matmul_sp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_matmul_dp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_trans_sp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_trans_dp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_matarith_sp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_matarith_dp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_norm_sp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_norm_dp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_copy_sp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_copy_dp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_fill_sp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_fill_dp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_reduce_sp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_reduce_dp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_trans_reduce_sp_test PRIVATE CUDA::curand)
    target_link_libraries(dev_trans_reduce_dp_test PRIVATE CUDA::curand)
    option(DEFINE_CUBLAS "Option description" ON)
    if(DEFINE_CUBLAS)
      add_compile_definitions(-D_CUBLAS)
      target_link_libraries(main PRIVATE CUDA::cublas)
      target_link_libraries(dev_copyctor_sp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_copyctor_dp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_movector_sp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_movector_dp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_matmul_sp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_matmul_dp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_trans_sp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_trans_dp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_matarith_sp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_matarith_dp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_norm_sp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_norm_dp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_copy_sp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_copy_dp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_fill_sp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_fill_dp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_reduce_sp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_reduce_dp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_trans_reduce_sp_test PRIVATE CUDA::cublas)
      target_link_libraries(dev_trans_reduce_dp_test PRIVATE CUDA::cublas)
    endif(DEFINE_CUBLAS)
    option(DEFINE_THRUST "Option description" ON)
    if(DEFINE_THRUST)
      add_compile_definitions(-D_THRUST -D_STDPAR -D_PINNED)
    endif(DEFINE_THRUST)
    target_link_libraries(dev_copyctor_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_copyctor_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_movector_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_movector_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_matmul_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_matmul_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_trans_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_trans_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_matarith_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_matarith_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_norm_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_norm_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_copy_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_copy_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_fill_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_fill_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_reduce_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_reduce_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_trans_reduce_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(dev_trans_reduce_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    add_test(CopyCtrSp dev_copyctor_sp_test)
    add_test(CopyCtrDp dev_copyctor_dp_test)
    add_test(MoveCtrSp dev_movector_sp_test)
    add_test(MoveCtrDp dev_movector_dp_test)
    add_test(MatmulSp dev_matmul_sp_test)
    add_test(MatmulDp dev_matmul_dp_test)
    add_test(TransSp dev_trans_sp_test)
    add_test(TransDp dev_trans_dp_test)
    add_test(MatArithSp dev_matarith_sp_test)
    add_test(MatArithDp dev_matarith_dp_test)
    add_test(NormSp dev_norm_sp_test)
    add_test(NormDp dev_norm_dp_test)
    add_test(CopySp dev_copy_sp_test)
    add_test(CopyDp dev_copy_dp_test)
    add_test(FillSp dev_fill_sp_test)
    add_test(FillDp dev_fill_dp_test)
    add_test(ReduceSp dev_reduce_sp_test)
    add_test(ReduceDp dev_reduce_dp_test)
    add_test(TransReduceSp dev_trans_reduce_sp_test)
    add_test(TransReduceDp dev_trans_reduce_dp_test)
  else()
    message("CUDAToolkit is not found.")
  endif()
else()
  set(CMAKE_CXX_FLAGS "-Wall -Wextra")
  set(CMAKE_CXX_FLAGS_DEBUG "-g")
  set(CMAKE_CXX_FLAGS_RELEASE "-O3")
  add_executable(main main.cpp)
  add_executable(host_copyctor_sp_test test/host_copy_ctor_sp.cpp)
  add_executable(host_copyctor_dp_test test/host_copy_ctor_dp.cpp)
  add_executable(host_movector_sp_test test/host_move_ctor_sp.cpp)
  add_executable(host_movector_dp_test test/host_move_ctor_dp.cpp)
  add_executable(host_matmul_sp_test test/host_matmul_sp.cpp)
  add_executable(host_matmul_dp_test test/host_matmul_dp.cpp)
  add_executable(host_trans_sp_test test/host_trans_sp.cpp)
  add_executable(host_trans_dp_test test/host_trans_dp.cpp)
  add_executable(host_matarith_sp_test test/host_matarith_sp.cpp)
  add_executable(host_matarith_dp_test test/host_matarith_dp.cpp)
  add_executable(host_norm_sp_test test/host_norm_sp.cpp)
  add_executable(host_norm_dp_test test/host_norm_dp.cpp)
  add_executable(host_copy_sp_test test/host_copy_sp.cpp)
  add_executable(host_copy_dp_test test/host_copy_dp.cpp)
  add_executable(host_fill_sp_test test/host_fill_sp.cpp)
  add_executable(host_fill_dp_test test/host_fill_dp.cpp)
  add_executable(host_reduce_sp_test test/host_reduce_sp.cpp)
  add_executable(host_reduce_dp_test test/host_reduce_dp.cpp)
  add_executable(host_trans_reduce_sp_test test/host_trans_reduce_sp.cpp)
  add_executable(host_trans_reduce_dp_test test/host_trans_reduce_dp.cpp)
  target_include_directories(main PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_copyctor_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_copyctor_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_movector_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_movector_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_matmul_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_matmul_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_trans_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_trans_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_matarith_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_matarith_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_norm_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_norm_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_copy_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_copy_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_fill_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_fill_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_reduce_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_reduce_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_trans_reduce_sp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  target_include_directories(host_trans_reduce_dp_test PRIVATE ${PROJECT_SOURCE_DIR}/include)
  find_package(MKL)
  if(MKL_FOUND )
    message("MKL is found.")
    target_link_libraries(main PUBLIC MKL::MKL)
    target_link_libraries(host_copyctor_sp_test PUBLIC MKL::MKL)
    target_link_libraries(host_copyctor_dp_test PUBLIC MKL::MKL)
    target_link_libraries(host_movector_sp_test PUBLIC MKL::MKL)
    target_link_libraries(host_movector_dp_test PUBLIC MKL::MKL)
    target_link_libraries(host_matmul_sp_test PUBLIC MKL::MKL)
    target_link_libraries(host_matmul_dp_test PUBLIC MKL::MKL)
    target_link_libraries(host_trans_sp_test PUBLIC MKL::MKL)
    target_link_libraries(host_trans_dp_test PUBLIC MKL::MKL)
    target_link_libraries(host_matarith_sp_test PUBLIC MKL::MKL)
    target_link_libraries(host_matarith_dp_test PUBLIC MKL::MKL)
    target_link_libraries(host_norm_sp_test PUBLIC MKL::MKL)
    target_link_libraries(host_norm_dp_test PUBLIC MKL::MKL)
    target_link_libraries(host_copy_sp_test PUBLIC MKL::MKL)
    target_link_libraries(host_copy_dp_test PUBLIC MKL::MKL)
    target_link_libraries(host_fill_sp_test PUBLIC MKL::MKL)
    target_link_libraries(host_fill_dp_test PUBLIC MKL::MKL)
    target_link_libraries(host_reduce_sp_test PUBLIC MKL::MKL)
    target_link_libraries(host_reduce_dp_test PUBLIC MKL::MKL)
    target_link_libraries(host_trans_reduce_sp_test PUBLIC MKL::MKL)
    target_link_libraries(host_trans_reduce_dp_test PUBLIC MKL::MKL)
    option(DEFINE_MKL "Option description" ON)
    if(DEFINE_MKL)
      add_compile_definitions(-D_MKL)
    endif(DEFINE_MKL)
  else()
    message("MKL is not found.")
  endif()
  find_package(TBB)
  if(TBB_FOUND )
    message("TBB is found.")
    target_link_libraries(main PUBLIC TBB::tbb)
    target_link_libraries(host_copyctor_sp_test PUBLIC TBB::tbb)
    target_link_libraries(host_copyctor_dp_test PUBLIC TBB::tbb)
    target_link_libraries(host_movector_sp_test PUBLIC TBB::tbb)
    target_link_libraries(host_movector_dp_test PUBLIC TBB::tbb)
    target_link_libraries(host_matmul_sp_test PUBLIC TBB::tbb)
    target_link_libraries(host_matmul_dp_test PUBLIC TBB::tbb)
    target_link_libraries(host_trans_sp_test PUBLIC TBB::tbb)
    target_link_libraries(host_trans_dp_test PUBLIC TBB::tbb)
    target_link_libraries(host_matarith_sp_test PUBLIC TBB::tbb)
    target_link_libraries(host_matarith_dp_test PUBLIC TBB::tbb)
    target_link_libraries(host_norm_sp_test PUBLIC TBB::tbb)
    target_link_libraries(host_norm_dp_test PUBLIC TBB::tbb)
    target_link_libraries(host_copy_sp_test PUBLIC TBB::tbb)
    target_link_libraries(host_copy_dp_test PUBLIC TBB::tbb)
    target_link_libraries(host_fill_sp_test PUBLIC TBB::tbb)
    target_link_libraries(host_fill_dp_test PUBLIC TBB::tbb)
    target_link_libraries(host_reduce_sp_test PUBLIC TBB::tbb)
    target_link_libraries(host_reduce_dp_test PUBLIC TBB::tbb)
    target_link_libraries(host_trans_reduce_sp_test PUBLIC TBB::tbb)
    target_link_libraries(host_trans_reduce_dp_test PUBLIC TBB::tbb)
    option(DEFINE_STDPAR "Option description" ON)
    if(DEFINE_STDPAR)
      add_compile_definitions(-D_STDPAR)
    endif(DEFINE_STDPAR)
  else()
    message("TBB is not found.")
  endif()	  
  find_package(OpenMP)
  if(OPENMP_FOUND)
    message("OpenMP is found.")
    target_link_libraries(main PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_copyctor_sp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_copyctor_dp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_movector_sp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_movector_dp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_matmul_sp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_matmul_dp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_trans_sp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_trans_dp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_matarith_sp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_matarith_dp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_norm_sp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_norm_dp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_copy_sp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_copy_dp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_fill_sp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_fill_dp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_reduce_sp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_reduce_dp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_trans_reduce_sp_test PUBLIC OpenMP::OpenMP_CXX)
    target_link_libraries(host_trans_reduce_dp_test PUBLIC OpenMP::OpenMP_CXX)
  else()
    message("OpenMP is not found.")  
  endif()
    target_link_libraries(host_copyctor_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_copyctor_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_movector_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_movector_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_matmul_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_matmul_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_trans_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_trans_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_matarith_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_matarith_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_norm_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_norm_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_copy_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_copy_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_fill_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_fill_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_reduce_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_reduce_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_trans_reduce_sp_test PRIVATE GTest::gtest GTest::gtest_main)
    target_link_libraries(host_trans_reduce_dp_test PRIVATE GTest::gtest GTest::gtest_main)
    add_test(CopyCtrSp host_copyctor_sp_test)
    add_test(CopyCtrDp host_copyctor_dp_test)
    add_test(MoveCtrSp host_movector_sp_test)
    add_test(MoveCtrDp host_movector_dp_test)
    add_test(MatmulSp host_matmul_sp_test)
    add_test(MatmulDp host_matmul_dp_test)
    add_test(TransSp host_trans_sp_test)
    add_test(TransDp host_trans_dp_test)
    add_test(MatArithSp host_matarith_sp_test)
    add_test(MatArithDp host_matarith_dp_test)
    add_test(NormSp host_norm_sp_test)
    add_test(NormDp host_norm_dp_test)
    add_test(CopySp host_copy_sp_test)
    add_test(CopyDp host_copy_dp_test)
    add_test(FillSp host_fill_sp_test)
    add_test(FillDp host_fill_dp_test)
    add_test(ReduceSp host_reduce_sp_test)
    add_test(ReduceDp host_reduce_dp_test)
    add_test(TransReduceSp host_trans_reduce_sp_test)
    add_test(TransReduceDp host_trans_reduce_dp_test)
endif()	

enable_testing()
